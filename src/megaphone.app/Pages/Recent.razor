@page "/recent"

@using Megaphone.App.Data
@using Megaphone.App.Data.Views
@using System.Diagnostics
@using System.Net
@using System.Threading

@inject IResourceService service

<h1>Recent News</h1>

@if (list == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var l in list.Resources)
    {
        <table class="table">
            <thead>
                <tr>
                    <th align="left" colspan="2">@l.Key</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in l.Value)
                {
                    <tr>
                        <td width="20">
                            <a onclick="return ShareOnLinkedin('@r.Url');" href="@r.Url">
                                <span class="oi oi-share-boxed" aria-hidden="true"></span>
                            </a>
                        </td>
                        <td align="left"><a href="@r.Url" target="_blank">@r.Display</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private ResourceListView list = new();

    Timer timer;

    private async Task UpdateResources()
    {
        this.list = await service.GetRecent();

        this.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        timer = new Timer(async state => await InvokeAsync(() => this.UpdateResources()), null, TimeSpan.Zero,TimeSpan.FromSeconds(60));
    }
}